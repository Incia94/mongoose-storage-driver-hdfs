image: docker:stable

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  IMAGE_NAME: emcmongoose/mongoose-storage-driver-hdfs
  IMAGE_FILE_NAME: build/mongoose-storage-driver-hdfs.tar

services:
  - docker:dind

stages:
  - build
  - test_integration
  - build_docker_image
  - test_acceptance
  - deploy

build:
  stage: build
  before_script:
    - apk add --no-cache --update openjdk8
  script:
    - ./gradlew jar
  artifacts:
    paths:
    - build/libs/mongoose-storage-driver-hdfs.jar

test_integration:
  stage: test_integration
  before_script:
    - apk add --no-cache --update openjdk8
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
  script:
    - "./gradlew test --tests com.emc.mongoose.storage.driver.hdfs.integration.*"
  artifacts:
    paths:
      - build/reports/tests/test/*
    when: on_failure

build_docker_image:
  stage: build_docker_image
  before_script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
    - export MONGOOSE_VERSION=$(cat build.gradle | grep "mongoose:" | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
  script:
    - docker build --build-arg MONGOOSE_VERSION=${MONGOOSE_VERSION} -f docker/Dockerfile -t ${IMAGE_NAME}:${CI_COMMIT_SHA} .
    - docker save ${IMAGE_NAME}:${CI_COMMIT_SHA} > ${IMAGE_FILE_NAME}
  artifacts:
    paths:
      - ${IMAGE_FILE_NAME}

test_acceptance:
  stage: test_acceptance
  before_script:
    - apk add --no-cache --update openjdk8
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
    - docker load < ${IMAGE_FILE_NAME}
    - export MONGOOSE_IMAGE_VERSION=${CI_COMMIT_SHA}
  script:
    - "./gradlew test --tests com.emc.mongoose.storage.driver.hdfs.system.*"
  artifacts:
    paths:
      - build/reports/tests/test/*
    when: on_failure

deploy_to_maven_repo:
  # TODO
  stage: deploy
  only:
    - tags
    - master

deploy_to_docker_hub:
  stage: deploy
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
    - docker load < ${IMAGE_FILE_NAME}
    - docker tag ${IMAGE_NAME}:${CI_COMMIT_SHA} ${IMAGE_NAME}:${CI_COMMIT_TAG}
    - docker push ${IMAGE_NAME}:${CI_COMMIT_TAG}
    - docker tag ${IMAGE_NAME}:${CI_COMMIT_SHA} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:latest
  only:
    - tags
    - master
